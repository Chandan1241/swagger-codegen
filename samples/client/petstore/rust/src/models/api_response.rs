/* 
 * Swagger Petstore
 *
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

// ApiResponse : Describes the result of uploading an image resource

#[derive(Debug, Serialize, Deserialize)]
pub struct ApiResponse {
  #[serde(rename = "code")] code: Option<i32>,
  #[serde(rename = "type")] Type_: Option<String>,
  #[serde(rename = "message")] message: Option<String>
}

impl ApiResponse {
  // Describes the result of uploading an image resource
  pub fn new() -> ApiResponse {
    ApiResponse {
      code: None,
      Type_: None,
      message: None
    }
  }

  pub fn set_code(&mut self, code: i32) {
    self.code = Some(code);
  }

  pub fn with_code(mut self, code: i32) -> ApiResponse {
    self.code = Some(code);
    self
  }

  pub fn set_Type_(&mut self, Type_: String) {
    self.Type_ = Some(Type_);
  }

  pub fn with_Type_(mut self, Type_: String) -> ApiResponse {
    self.Type_ = Some(Type_);
    self
  }

  pub fn set_message(&mut self, message: String) {
    self.message = Some(message);
  }

  pub fn with_message(mut self, message: String) -> ApiResponse {
    self.message = Some(message);
    self
  }

}



